openapi: 3.0.3
info:
  description: Описание API системы проведения стажировок в Лиге цифровой экономики.
  version: 1.0.11
  title: Swagger LIGA Course
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
- name: Course
  description: Действия со стажировкой
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: User
  description: Действия с пользователями
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: Promo
  description: Действия при подготовке к стажировке
  externalDocs:
    description: Find out more
    url: http://swagger.io
paths:
  /course:
    post:
      tags:
      - Course
      summary: Создание стажировки
      description: ''
      requestBody:
        description: Поля таблицы Course
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
        required: true
      responses:
        201:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
      security:
      - bearerAuth: []
    get:
      tags:
      - Course
      summary: Получение стажировок
      description: Archived
      operationId: Archived
      parameters:
      - name: isActive
        in: query
        required: false
        description: Помещена стажировка в архив или нет
        schema:
          type: boolean
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Courses"
  /course/my:
    get:
      tags:
      - Course
      summary: Получение всех стажировок пользователя по текущей роли
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Courses"  
      security:
      - bearerAuth: []          
  /course/{courseId}:
    patch:
      tags:
      - Course
      summary: Редактирование стажировки
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки, которую нужно поменять
        schema:
          type: integer
          format: int64
      requestBody:
        description: Поля для изменения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Course'
      responses:
        200:
          description: "Ok"
      security:
      - bearerAuth: []
  /courses/{courseId}/users:
    post:
      tags:
      - Course
      summary: Назначение пользователю роли
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      requestBody:
        description: Поля запроса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignedRole'
      responses:
        201:
          description: Успешная операция
      security:
      - bearerAuth: []
  /user/security-check:
    post:
      tags:
      - User
      summary: Отправка кандидата на согласование в СБ
      description: ""
      requestBody:
        description: Поля запроса
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidateForSecurity'
      responses:
        200:
          description: Ok
      security:
      - bearerAuth: [] 
  /user/registration:
    post:
      tags:
      - User
      summary: Регистрация пользователя в системе
      description: ""
      operationId: loginUser
      requestBody:
        description: Поле запроса
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Username'
      responses:
        201:
          description: Успешная регистрация
        400:
          description: Ответ в случае ошибки
      security:
      - bearerAuth: []
  /user/auth:
    post:
      tags:
      - User
      summary: Аутентификация пользователя в системе
      description: ""
      operationId: AuthUser
      requestBody:
        description: Логин и пароль
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        201:
          description: Успешная операция
        400:
          description: Ответ в случае ошибки
      security:
      - bearerAuth: []
  /user/course/{courseId}/students:
    get:
      tags:
      - User
      summary: Получить список всех стажеров
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StudentList"
      security:
      - bearerAuth: [] 
  /user/hr-promo:
    post:
      tags:
      - User
      summary: Рекомендация стажера к трудоустройству
      description: ""
      requestBody:
        description: Поля запроса
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentforHR'
      responses:
        201:
          description: Успешная операция
      security:
      - bearerAuth: []
  /user/course/{courseId}/students/{userId}:
    get:
      tags:
      - User
      summary: Получить данные по стажеру с ДЗ и фидбэками
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      - name: userId
        required: true
        in: path
        description: ID стажера
        schema:
          type: integer
          format: int64
      responses:
        201:
          description: Успешная операция
          content:
            application/json: 
              schema:
                $ref: "#/components/schemas/StudentforFeedback"
      security:
      - bearerAuth: []
  /promo/{courseId}/day:
    post:
      tags:
      - Promo
      summary: Создание дня программы
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      requestBody:
        description: Поля таблицы Day
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Day'
      responses:
        201:
          description: Успешно
          content:
            application/json:
              schema:
                type: object
                properties:
                    id:
                      type: integer
                      format: int64
      security:
      - bearerAuth: []
  /promo/{courseId}/day/{dayId}:
    delete:
      tags:
      - Promo
      summary: Удаление дня программы
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      - name: dayId
        required: true
        in: path
        description: ID дня стажировки
        schema:
          type: integer
          format: int64  
      responses:
        200:
          description: Успешно
      security:
      - bearerAuth: []
  /promo/{courseId}/program:      
    get:
      tags:
      - Promo
      summary: Получение программы стажировки
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Успешная операция
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Program"
  /promo/course/{courseId}/candidates:
    get:
      tags:
      - Promo
      summary: Получение списка кандидатов
      description: ""
      parameters:
      - name: courseId
        required: true
        in: path
        description: ID стажировки
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: "Успешная операция"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CandidateList"
      security:
      - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      description: "Авторизация по токену. <br> Все запросы от имени пользователя должны выполняться с заголовком 'Authorization: Token TOKENVALUE'"
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiResponse:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
    Username:
      type: "object"
      properties:
        username:
          type: "string"    
      xml:
        name: "Username"    
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        username:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        middleName:
          type: "string"
        email:
          type: "string"
        birthday:
          type: "string"
        city:
          type: "string"
      xml:
        name: "User"
    StudentforHR:
      type: "object"
      properties:
        Firstname:
          type: "string"
        Lastname:
          type: "string"
        Middlename:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
        birthday:
          type: "string"
          format: "date-time"
        address:
          type: "string"
      xml:
        name: "StudentforHR"    
    Credentials:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        password:
          type: "string"
      xml:
        name: "Credentials"
    Course:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        startDate:
          type: "string"
          format: "date-time"
        enddate:
          type: "string"
          format: "date-time"
        archived:
          type: "boolean"
        managerId:
          type: "integer"
          format: "int32"
      xml:
        name: "Course"
    Courses:
      type: "array"
      items:
        $ref: "#/components/schemas/Course"
      xml:
        name: "Courses"     
    Day:
      type: "object"
      properties:
        topicId:
          type: "integer"
          format: "int64"
        number:
          type: "string"
        date:
          type: "string"
          format: "date-time"
        practicalTask:
          type: "string"
      xml:
        name: "Day"
    ProgramDay:
      type: "object"
      properties:
        topic:
          type: "string"
        number:
          type: "string"
        date:
          type: "string"
          format: "date-time"
        practicalTask:
          type: "string"
      xml:
        name: "ProgramDay"    
    Program:
      type: "array"
      items:
        $ref: "#/components/schemas/ProgramDay"
      xml:
        name: "Program"   
    AssignedRole:
      type: "object"
      properties:
        userId:
          type: "integer"
          format: "int64"   
        roleId:
          type: "integer"
          format: "int64"  
      xml:
        name: "AssignedRole"  
    Student:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        firstName:
          type: "string"
        lastName:
          type: "string"
        middleName:
          type: "string"
      xml:
        name: "Student"  
    StudentList:
      type: "array"
      items:
        $ref: "#/components/schemas/Student"
      xml:
        name: "StudentList"     
    Candidate:
      type: "object"
      properties:
        first_name:
          type: "string"
        last_name:
          type: "string"
        middle_name:
          type: "string"
        approvedbyMC:
          type: "boolean"
        approvedbySec:
          type: "boolean"  
        profileId:
          type: "integer"
          format: "int64"
        phone:
          type: "string"
      xml:
        name: "Candidate"     
    CandidateList:
      type: "array"
      items:
        $ref: "#/components/schemas/Candidate"
      xml:
        name: "CandidateList" 
    CandidateForSecurity:
      type: "object"
      properties:
        courseId:
          type: "integer"
          format: "int64"
        profileId:
          type: "integer"
          format: "int64"
      xml:
        name: "CandidateForSecurity"        
    StudentforFeedback:
      type: "object"
      properties:
        studentId:
          type: "integer"
          format: "int64"
        Firstname:
          type: "string"
        Lastname:
          type: "string"
        Middlename:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
        birthday:
          type: "string"
          format: "date-time"
        address:
          type: "string"
        feedback:
          type: "string"
        homeworks:
          type: "array"
          items:
            $ref: "#/components/schemas/Homework"
      xml:
        name: "StudentforFeedback"    
    Homework:
      type: "object"
      properties:
        lection:
          type: "string"
        task:
          type: "string"
        answer:
          type: "string"
        link:
          type: "string"
        grade:
          type: "string"
      xml:
        name: "Homework"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
